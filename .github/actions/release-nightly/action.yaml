name: Release Nightly

inputs:
  artifact:
    description: 'The name of the artifact to process'
    required: true
  release:
    description: 'The name of the release to upload to'
    required: false
    default: 'nightly'
  platform:
    description: 'The platform to use for the archive name'
    required: true
  format:
    description: 'The format to use for the archive name'
    required: false
    default: 'tar'
  repo-token:
    description: 'The token to use for the upload'
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Download artifact 
      uses: actions/download-artifact@v2
      with:
        name: ${{ inputs.artifact }}
    - name: "Fix artifact name & perms"
      run: |
        mv postgrest ${{ inputs.artifact }} && chmod +x ${{ inputs.artifact }}
      shell: bash
    - name: Get current date & time
      id: datetime
      run: echo "datetime=$(date +%Y-%m-%d-%H-%M)" >> "$GITHUB_OUTPUT"
      shell: bash
    - name: Render archive name
      id: archive_name
      run: |
        echo "archive_name=postgresql-nightly-${{ steps.datetime.outputs.datetime }}-${{ github.sha }}-${{ inputs.platform }}" >> "$GITHUB_OUTPUT"
      shell: bash
    - name: Compress tarball
      if: ${{ inputs.format == 'tar' }}
      run: |
        echo "asset_name=${{ steps.archive_name.outputs.archive_name }}.tar.xz" >> "$GITHUB_ENV"
        tar -cJf ${{ steps.archive_name.outputs.archive_name }}.tar.xz ${{ inputs.artifact }}
      shell: bash
    - name: Compress zip
      if: ${{ inputs.format == 'zip' }}
      run: |
        echo "asset_name=${{ steps.archive_name.outputs.archive_name }}.zip" >> "$GITHUB_ENV"
        zip ${{ steps.archive_name.outputs.archive_name }}.zip ${{ inputs.artifact }}
      shell: bash
    - name: Upload to release
      env:
        GITHUB_TOKEN: ${{ inputs.repo-token }}
      run: |
        curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${GITHUB_TOKEN}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          -H "Content-Type: application/octet-stream" \
          "https://uploads.github.com/repos/develop7/postgrest/releases/126613367/assets?name=${asset_name}" \
          --data-binary "@${asset_name}"
      shell: bash
    # - name: Upload to release
    #   uses: softprops/action-gh-release@v0.1.15
    #   with:
    #     files: |
    #       ${{ steps.archive_name.outputs.archive_name }}.tar.xz
    #       ${{ steps.archive_name.outputs.archive_name }}.zip
    #     tag_name: ${{ inputs.release }}
    #     fail_on_unmatched_files: false
    #     prerelease: true

#!/bin/sh
### BEGIN INIT INFO
# Provides:          postgrest_v2
# Required-Start:    $local_fs $network postgresql
# Required-Stop:     $local_fs $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       PostgreSQL REST API daemon
### END INIT INFO

API_NAME="v2"
CONF_FILE="/etc/default/postgrest_v2.conf"

### Editing below here should not be needed ###
. /lib/lsb/init-functions
if test -f $CONF_FILE; then
    . $CONF_FILE
fi
POSTGREST=/usr/local/bin/postgrest
CONNECTION_STRING="postgres://"
POSTGREST_OPTS=""

CONNECTION_STRING="$CONNECTION_STRING$POSTGREST_AUTH_USER"

CONNECTION_STRING="$CONNECTION_STRING@:/$POSTGREST_DBNAME"

if [ -n "$POSTGREST_PORT" ]; then
	POSTGREST_OPTS="$POSTGREST_OPTS --port $POSTGREST_PORT"
fi

if [ -n "$POSTGREST_DBPOOL" ]; then
	POSTGREST_OPTS="$POSTGREST_OPTS --pool $POSTGREST_DBPOOL"
fi
if [ -n "$POSTGREST_DBMAXRES" ]; then
        POSTGREST_OPTS="$POSTGREST_OPTS --max-rows $POSTGREST_DBMAXRES"
fi
if [ -n "$POSTGREST_JWT_SECRET" ]; then
	#export POSTGREST_JWT_SECRET="$POSTGREST_JWT_SECRET"
	POSTGREST_OPTS="$POSTGREST_OPTS --jwt-secret $POSTGREST_JWT_SECRET"
fi
if [ -n "$POSTGREST_SCHEMA" ]; then
	POSTGREST_OPTS="$POSTGREST_OPTS --schema $POSTGREST_SCHEMA"
fi
if [ -n "$POSTGREST_ANON" ]; then
	POSTGREST_OPTS="$POSTGREST_OPTS --anonymous $POSTGREST_ANON"
fi

#export CONNECTION_STRING="$CONNECTION_STRING"

START_PARAMS="$CONNECTION_STRING $POSTGREST_OPTS"

start()
{
	log_daemon_msg "Starting PostgreSQL REST API daemon" "postgrest" || true
	if start-stop-daemon --start --pidfile /var/run/postgrest_$API_NAME.pid --make-pidfile --quiet --oknodo --chuid ${POSTGREST_USER} --exec $POSTGREST -- $START_PARAMS >>$POSTGREST_LOG 2>&1; then
		log_end_msg 0 || true
	else
		log_end_msg 1 || true
	fi
}

stop()
{
	log_daemon_msg "Stopping PostgreSQL REST API daemon" "postgrest" || true
	if start-stop-daemon --stop --quiet --pidfile /var/run/postgrest_$API_NAME.pid --oknodo --exec $POSTGREST; then
		log_end_msg 0 || true
	else
		log_end_msg 1 || true
	fi
}

status()
{
	status_of_proc $POSTGREST postgrest && exit 0 || exit $?
}

case "$1" in
start)
	start
	;;
stop)
	stop
	;;
restart)
	stop
	start
	;;
status)
	status
	;;
*)
	echo "Usage: $0 {start|stop|restart|status}"
esac